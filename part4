import java.security.Principal;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.User;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.coxandkings.workflow.beans.ProductPojo;
import com.coxandkings.workflow.serviceInterface.IProductService;

@SessionAttributes({ "username" })
@Controller
public class WorkFlowController {

  
	@Autowired
	IProductService iProductService;
	
	@RequestMapping(value = "/homePage", method = RequestMethod.GET)
	public String homePage() {

		return "Home";
	}

	@RequestMapping(value = "/showUser", method = RequestMethod.GET)
	public String showUser() {

		return "UserDetail";
	}

	// for spring sequrity

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String login(ModelMap model) {

		return "login";

	}

	@RequestMapping(value = "/welcome", method = RequestMethod.GET)
	public String printWelcome(ModelMap model, HttpServletRequest request) {

		String loginpage = null;

/*		User user = (User)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		String name = user.getUsername();

		Object oo = user.getAuthorities();
		System.out.println(oo.toString());
		
		
		
*/		
		/*Principal principal=request.getUserPrincipal();
		
		String name=principal.getName();*/
		
		
		User user = (User)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		
		/*Object object=SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		User user=(User)object;*/
		String name = user.getUsername();
		
		//String name=(String)SecurityContextHolder.getContext().getAuthentication().getName();
		System.out.println(name);
		Object oo=user.getAuthorities();
		
		//Object oo=SecurityContextHolder.getContext().getAuthentication().getAuthorities();
		
		System.out.println(oo.toString());

		
		/*
		
		String name=request.getUserPrincipal().getName();
		System.out.println("**************************************");
		System.out.println(name+"*****");
		System.out.println("**************************************");
		
		//String ou=request.getUserPrincipal().getName();		
		final Principal userPrincipal = request.getUserPrincipal();
	    GenericPrincipal genericPrincipal = (GenericPrincipal)userPrincipal;
	    final String[] roles = genericPrincipal.getRoles();		
		
	    Object oo=roles[0];
	    System.out.println("No Of  Rolls "+roles.length);
	    System.out.println("Roll is "+oo);
		*/
	    
		/*String name="james";
		Object oo="manager_home";*/
		//Object oo=null;
		/*if(name.equals("james") || name.equals("john"))
			oo="manager";
		else if(name.equals("lucy") || name.equals("watson") || name.equals("robert"))
			oo="configurator";
		else if(name.equals("hussy") || name.equals("williams") )
			oo="reviewer";
*/
		
		if (oo.toString().contains("manager")) {
			
			List<ProductPojo> productList=iProductService.productList();
			System.out.println(productList.size());
			
			model.addAttribute("productList", productList);
			loginpage = "manager_home";
		} else if (oo.toString().contains("configurator")) {
			loginpage = "configrator_home";
		} else if (oo.toString().contains("reviewer")) {
			loginpage = "reviewer_home";
		}

		else {
			loginpage = "login";
		}

		model.addAttribute("username", name);

		// model.addAttribute("message", "Spring Security login  ");
		return loginpage;

	}

	@RequestMapping(value = "/loginfailed", method = RequestMethod.GET)
	public String loginerror(ModelMap model) {

		model.addAttribute("error", "true");
		return "login";

	}

	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public String logout(ModelMap model) {

		return "login";

	}

}
