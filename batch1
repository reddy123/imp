job

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<!-- Beans representing the 2 job steps. -->
	<!-- Step1 - print hello world -->
	<bean id="helloTask" class="com.cnk.travelerp.spring.batch.sample.HelloTask">
		<property name="taskStartMessage" value="Hello World - the time is now " />
	</bean>

	<!-- Step2 - print current time -->
	<bean id="timeTask" class="com.cnk.travelerp.spring.batch.sample.TimeTask" />



	 <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:ledger2.txt" />
	<!-- 	<property name="linesToSkip" value="1" />-->
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						

class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							

value="receiptDate,memberName,checkNumber,checkDate,paymentType,depositAmount,paymentAmount,comments" />
					</bean>
				</property>
				<property name="fieldSetMapper" ref="ledgerMapper" />
			</bean>
		</property>
	</bean>



	<!-- FINALLY OUR JOB DEFINITION. THIS IS A 3 STEP JOB -->
	<batch:job id="batchJob">
		<batch:listeners>
			<batch:listener ref="appJobExecutionListener" />
		</batch:listeners>
		<batch:step id="printMessage" next="printTime">
			<batch:tasklet ref="helloTask" />
		</batch:step>
		<batch:step id="printTime" next="readFile">
			<batch:tasklet ref="timeTask" />
		</batch:step>
		<batch:step id="readFile" next="readDB">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="itemFailureLoggerListener" />
				</batch:listeners>
				<batch:chunk reader="itemReader" writer="itemWriter"
					commit-interval="1000"  />
			</batch:tasklet>
		</batch:step>
		<batch:step id="readDB">
			<batch:tasklet>
				<batch:chunk reader="cursorReader" writer="flatFileWriter"
					commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
 

	<!-- from db to flat file -->


	<batch:job id="textPrint" >
		<batch:step id="print">
		<batch:tasklet ref="helloTask" />
			<!-- <batch:tasklet>
				<batch:chunk reader="cursorReader" writer="flatFileWriter"
					commit-interval="1000" />
			</batch:tasklet> -->
		</batch:step>
	</batch:job>


	<bean id="cursorReader"
		class="org.springframework.batch.item.database.HibernateCursorItemReader">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="queryString" value="from Ledger" />
	</bean>

	<bean id="flatFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:c:/temp/ledgers-output.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						

class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="lid,receiptDate,memberName" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>


</beans>

===========
scheduler

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/task
   http://www.springframework.org/schema/task/spring-task-3.0.xsd  
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- <context:property-placeholder properties-ref="deployProperties" /> -->
	<!-- Scheduler definition  cron="0 25 15 * * MON-FRI"-->

	<task:annotation-driven />
	<!-- <task:scheduler id="scheduler" pool-size="5" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="jobLauncherController" method="launch" cron="0 0/2 * * * MON-FRI" />
		<task:scheduled ref="jobLauncherController" method="launch1" cron="0 31 16 * * MON-FRI" />
	</task:scheduled-tasks> -->



	<!--Quartz scheduler configuration -->

	<!-- <bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean"> 
		<property name="jobClass" value="com.cnk.travelerp.spring.batch.sample.JobLauncherController" 
		/> </bean> <bean id="jobDetailTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="jobDetail" /> <property name="cronExpression" 
		value="0/5 * * * * ?" /> </bean> <bean id="scheduler" 

class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
		<property name="triggers"> <list> <ref bean="jobDetailTrigger" /> </list> 
		</property> <property name="jobFactory"> <bean 

class="org.springframework.scheduling.quartz.SpringBeanJobFactory" 
		/> </property> <property name="schedulerContextAsMap"> <map> <entry key="job" 
		value-ref="job" /> <entry key="jobLauncher" value-ref="jobLauncher" /> </map> 
		</property> </bean> -->


</beans>
=========
infra


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 

xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<!-- DATASOURCE, TRANSACTION MANAGER AND JDBC TEMPLATE -->

	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" /> <property 
		name="url" value="jdbc:hsqldb:file:target/data/ledger" /> <property name="username" 
		value="SA" /> <property name="password" value="" /> </bean> -->

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" /> <property 
		name="url" value="jdbc:oracle:thin:@10.21.12.129:1521:XE" /> <property name="username" 
		value="dev_env" /> <property name="password" value="dev_env" /> </bean> -->

	<!-- <bean id="transactionManager" 

class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"> 
		</bean> -->

	<!-- <jdbc:initialize-database data-source="dataSource"> <jdbc:script 

location="org/springframework/batch/core/schema-oracle10g.sql"/> 
		</jdbc:initialize-database> -->

	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->


	<!-- JOB REPOSITORY - WE USE IN-MEMORY REPOSITORY FOR OUR EXAMPLE -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="dataSource" ref="dataSource"></property>

	</bean>

	<!-- LAUNCH JOBS FROM A REPOSITORY -->
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- Task Executor for multiple jobs running -->
	<!-- <bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
		p:corePoolSize="1" p:maxPoolSize="30" /> -->
		
	<!--JobRegistry  for create runtime jobs  -->
	
	<!--JobRegistry  -->
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
		
    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor" 
          p:jobRegistry-ref="jobRegistry" />
		


</beans>

================
pom.xml


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.cnk.travelerp</groupId>
		<artifactId>spring-bacth-poc</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>spring-batch-web</artifactId>
	<packaging>war</packaging>

	<properties>
		<spring.batch.version>2.1.8.RELEASE</spring.batch.version>
		<spring.framework.version>3.1.0.RELEASE</spring.framework.version>
	</properties>

	<repositories>
		<repository>
			<id>com.springsource.repository.maven.release</id>
			<url>http://maven.springframework.org/release/</url>
		</repository>

		<repository>
			<id>com.springsource.repository.maven.milestone</id>
			<url>http://maven.springframework.org/milestone/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>

		<!--spring mvc dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>1.0.6</version>
		</dependency>

		<!-- Spring Batch dependencies -->
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>${spring.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-infrastructure</artifactId>
			<version>${spring.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<version>${spring.batch.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Hibernate Framework 4.1.0.Final dependencies -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.1.0.Final</version>
		</dependency>
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-envers</artifactId> 
			<version>4.1.0.Final</version> </dependency> -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-ehcache</artifactId> 
			<version>4.1.0.Final</version> </dependency> -->
		<!--web application enabled dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<!--Data base Dependencies -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0</version>
		</dependency>

		<!-- HSQLDB -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.8</version>
		</dependency>
		<!-- commons -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- Quartz dependency -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.5</version>
		</dependency>

	</dependencies>

</project>

==========

mvc


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">


	<!-- 1) USE ANNOTATIONS TO IDENTIFY AND WIRE SPRING BEANS. -->
	<context:component-scan base-package="com.cnk.travelerp.spring.batch"></context:component-scan>
	<context:annotation-config />
	<mvc:annotation-driven />

	<!--View Resolver -->

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}" p:password="${jdbc.password}" />


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocations">
			<value>classpath:hibernate.cfg.xml</value>
		</property> -->
		<property name="annotatedClasses">
			<list>
				<value>com.cnk.travelerp.spring.batch.filetodb.Ledger</value>
				<value>com.cnk.travelerp.spring.batch.sample.Employee</value>
			</list>
		</property>
		<!-- <property name="packagesToScan" value="com.cnk.travelerp.spring.batch.filetodb"></property> -->
		
		<!-- <property name="configurationClass"> <value>org.hibernate.cfg.AnnotationConfiguration</value> 
			</property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		one of the properties available; the maximum file size in bytes <property 
		name="maxUploadSize" value="100000" /> </bean> -->

	<!-- <bean id="handlerMapping" 

class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"> 
		<property name="interceptors"> <list> <ref bean="officeHoursInterceptor" 
		/> </list> </property> </bean> -->
	<!-- <mvc:interceptors> <bean class="com.spring.work.controller.TimeBasedAccessInterceptor"> 
		<property name="openingTime" value="9" /> <property name="closingTime" value="18" 
		/> </bean> </mvc:interceptors> -->
	<!-- <bean id="officeHoursInterceptor" class="com.spring.work.controller.TimeBasedAccessInterceptor"> 
		<property name="openingTime" value="9" /> <property name="closingTime" value="18" 
		/> </bean> -->

	<!--HTTP Invoker Example -->

	<!-- <bean id="accountService" class="com.spring.work.service.AccountServiceImpl" 
		/> <bean name="/AccountService" 

class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter"> 
		<property name="service" ref="accountService" /> <property name="serviceInterface" 
		value="com.spring.work.service.IAccountService" /> </bean> -->


</beans>
